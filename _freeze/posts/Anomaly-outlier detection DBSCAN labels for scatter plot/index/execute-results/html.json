{
  "hash": "7919693a038804f9aec29c6aba7aeb52",
  "result": {
    "markdown": "---\ntitle: \"Beyond the Cluster: Spotting the Outliers in Roanoke and Salem\"\nsubtitle: \"Uncovering Hidden Residential Gems with DBSCAN Anomaly Detection\"\nauthor: \"Heba Nusair\"\ndate: \"2023-11-06\"\ncategories: [news, code, analysis]\nimage: \"Bryan Vargas.jpg\"\n---\n\n#### **Introduction:**\n\nDiscovering anomalies can reveal much about a city's living patterns that conventional clustering might miss. In Roanoke and Salem cities, we dive into the uncommon, the outliers, the unique homeplaces that form the fabric of urban and suburban life. Using DBSCAN, an unsupervised machine learning algorithm, we identify these anomalies, offering insights into how and where people choose to live outside the expected clusters.\n\n#### **The Power of Anomaly Detection:**\n\nAnomaly detection stands at the frontier of data analysis, challenging the status quo by highlighting data points that don't fit in. In the context of urban landscapes, these anomalies could signify emerging neighborhoods, atypical living arrangements, or socio-economic factors influencing residential choices.\n\n#### **DBSCAN: A Primer:**\n\nDensity-Based Spatial Clustering of Applications with Noise (DBSCAN) is a robust algorithm that groups closely packed points together while labeling points that lie alone in low-density regions as outliers. Unlike K-Means, DBSCAN doesn't require pre-specifying the number of clusters, making it ideal for real-world data that's messy and unpredictable.\n\n#### **Methodology:**\n\nWe began with standardizing our geographical data to give each homeplace an equal footing. Next, we employed the DBSCAN algorithm, fine-tuning its parameters through a k-distance graph to ensure optimal clustering. This method distinguishes between the core points, the border points, and the noise, providing us with a granular view of residential distributions.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import NearestNeighbors\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Load the data\ndf = pd.read_csv('WorkersHomeplacesNewUpdate.csv')\n\n# Select only the geographic coordinates\ndf_geo = df[['X', 'Y']]\n\n# Standardizing the features\nscaler = StandardScaler()\ndf_geo_scaled = scaler.fit_transform(df_geo)\n\n# Plot the k-distance graph\nnbrs = NearestNeighbors(n_neighbors=4).fit(df_geo_scaled)\ndistances, indices = nbrs.kneighbors(df_geo_scaled)\n\n\n# After identifying a new eps value from the graph, adjust eps and min_samples\neps_value = 0.05  # This is an example, adjust based on the k-distance graph\nmin_samples_value = 20  # This is an example, adjust based on the dataset\n\n# Perform DBSCAN clustering with the new parameters\ndbscan = DBSCAN(eps=eps_value, min_samples=min_samples_value)\nclusters = dbscan.fit_predict(df_geo_scaled)\n\n# Add cluster labels to the dataframe\ndf['Cluster'] = clusters\n\n# Plot the clusters with the new parameters\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis', marker='o')\nplt.title('Adjusted DBSCAN Clustering of Homeplaces')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.colorbar(scatter, label='Cluster Label')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=793 height=523}\n:::\n:::\n\n\n#### **Insights and Patterns:**\n\nUpon analyzing the DBSCAN results, we observed distinct groupings that form the expected centers of habitation, but more intriguingly, we found scattered, isolated points. These outliers could indicate rural homes or unique urban spaces resisting typical cluster formations.\n\n#### **Visualization:**\n\nThe accompanying scatter plot vividly illustrates these findings. Each point represents a homeplace, with color-coded clusters and outliers clearly marked. This visualization is not just a map but a narrative of diversity in residential choices.\n\n![Overlaping the output of DBSCAN output and Roanoke and Salem map](DBSCAN and Map overlap.jpg)\n\n#### **Conclusion:**\n\nThrough this DBSCAN anomaly detection exercise, we've uncovered the hidden layers of Roanoke and Salem's residential tapestry. Such analyses can inform urban planning, real estate development, and community services by acknowledging not just the majority, but the unique cases that contribute to the cities' character.\n\n#### **Next Steps:**\n\nAs we continue to explore the data, comparing the results of K-Means and DBSCAN will be our next endeavor. Stay tuned for a comprehensive analysis where we juxtapose the general trends with the unique anomalies to paint a complete picture of urban settlement patterns.\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}