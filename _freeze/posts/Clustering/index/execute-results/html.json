{
  "hash": "17a0b18e028826d1a7d2715856bf5555",
  "result": {
    "markdown": "---\ntitle: \"Clustering\"\nauthor: \"Heba Nusair\"\ndate: \"2023-11-03\"\ncategories: [news, code, plot]\n---\n\nSince this post doesn't specify an explicit `image`, the first image in the post will be used in the listing page of posts.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('xy2.csv')\n\n# Assuming you're using 3 clusters (adjust as necessary)\nkmeans = KMeans(n_clusters=3, random_state=0)\nkmeans.fit(df[['X', 'Y']])\n\n# Assign the cluster labels to the DataFrame\ndf['Cluster'] = kmeans.labels_\n\n# Plotting the clusters\nplt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis')\nplt.title('K-Means Clustering of Home Locations')\nplt.xlabel('X (Longitude)')\nplt.ylabel('Y (Latitude)')\nplt.colorbar(label='Cluster Label')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\NUSAI\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=595 height=449}\n:::\n:::\n\n\n\\\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('Homeplaces in Roanoke and Salem Cities.csv')\n\n# Select only the geographic coordinates\ndf_geo = df[['X', 'Y']]\n\n# Standardizing the features (important for K-Means)\nscaler = StandardScaler()\ndf_geo_scaled = scaler.fit_transform(df_geo)\n\n# KMeans clustering\nkmeans = KMeans(n_clusters=5, n_init=10)\nclusters = kmeans.fit_predict(df_geo_scaled)\n\n# Adding cluster labels to your dataframe\ndf['Cluster'] = clusters\n\n# Plotting the clusters\nplt.figure(figsize=(10, 6))\nplt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis', marker='o')\n\nplt.title('Geographic Distribution of Homeplaces in Roanoke and Salem Cities')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.colorbar(label='Cluster Label')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=797 height=537}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}