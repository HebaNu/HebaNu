"0","import pandas as pd"
"0","import numpy as np"
"0","from sklearn.model_selection import train_test_split"
"0","from sklearn.preprocessing import StandardScaler"
"0","from sklearn.linear_model import LinearRegression"
"0","from sklearn.metrics import mean_squared_error, r2_score"
"0","import matplotlib.pyplot as plt"
"0",""
"0","# Load the dataset"
"0","data = pd.read_excel('Income_LivingLocationPrefrences.xlsx')"
"0",""
"0","# Handle NaN values"
"0","data.dropna(subset=['City_center', 'Urban_area', 'Suburban_area', 'Rural_area', 'Monthly_income'], inplace=True)"
"0",""
"0","# Convert the area preferences into a single ordinal dependent variable"
"0","area_to_number = {'City_center': 1, 'Urban_area': 2, 'Suburban_area': 3, 'Rural_area': 4}"
"0","data['living_area_preference'] = data[['City_center', 'Urban_area', 'Suburban_area', 'Rural_area']].idxmin(axis=1).map(area_to_number)"
"0",""
"0","# Convert income to a continuous scale based on the provided income brackets"
"0","income_mapping = {1.0: 625, 2.0: 2292, 3.0: 5000, 4.0: 6666}"
"0","data['continuous_income'] = data['Monthly_income'].map(income_mapping)"
"0",""
"0","# Scale the income feature"
"0","scaler = StandardScaler()"
"0","data['scaled_income'] = scaler.fit_transform(data[['continuous_income']])"
"0",""
"0","# Prepare the features and target variable for modeling"
"0","X = data[['scaled_income']]"
"0","y = data['living_area_preference']"
"0",""
"0","# Split the data into training and testing sets"
"0","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
"0",""
"0","# Create and train the linear regression model"
"0","model = LinearRegression()"
"0","model.fit(X_train, y_train)"
"1","LinearRegression()
"
"0","# Predict on the test data"
"0","y_pred = model.predict(X_test)"
"0",""
"0","# Evaluate the model's performance"
"0","mse = mean_squared_error(y_test, y_pred)"
"0","r2 = r2_score(y_test, y_pred)"
"0",""
"0","# Output the performance metrics"
"0","print(f'Mean Squared Error: {mse}')"
"1","Mean Squared Error: 1.2658068009077692
"
"1","R-squared: 0.006851215790502296
"
"0","# Plotting"
"0","plt.scatter(X_test['scaled_income'].values, y_test.values, color='black', label='Actual Data')"
"2","Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""[90m]8;line = 2862;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\pyplot.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\pyplot.py]8;;[39m"", line 2862, in scatter
    __ret = gca().scatter(
            ^^^^^^^^^^^^^^
  File ""[90m]8;line = 1442;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\__init__.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\__init__.py]8;;[39m"", line 1442, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""[90m]8;line = 2275;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\mpl_toolkits\mplot3d\axes3d.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\mpl_toolkits\mplot3d\axes3d.py]8;;[39m"", line 2275, in scatter
    patches = super().scatter(xs, ys, s=s, c=c, *args, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""[90m]8;line = 1442;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\__init__.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\__init__.py]8;;[39m"", line 1442, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""[90m]8;line = 4593;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\axes\_axes.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\axes\_axes.py]8;;[39m"", line 4593, in scatter
    raise ValueError(
ValueError: s must be a scalar, or float array-like with the same size as x and y
"
"0","plt.scatter(X_test['scaled_income'].values, y_pred, color='red', label='Predicted Data', alpha=0.5)"
"2","Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""[90m]8;line = 2862;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\pyplot.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\pyplot.py]8;;[39m"", line 2862, in scatter
    __ret = gca().scatter(
            ^^^^^^^^^^^^^^
  File ""[90m]8;line = 1442;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\__init__.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\__init__.py]8;;[39m"", line 1442, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""[90m]8;line = 2275;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\mpl_toolkits\mplot3d\axes3d.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\mpl_toolkits\mplot3d\axes3d.py]8;;[39m"", line 2275, in scatter
    patches = super().scatter(xs, ys, s=s, c=c, *args, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""[90m]8;line = 1442;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\__init__.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\__init__.py]8;;[39m"", line 1442, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""[90m]8;line = 4593;file://C:\Users\NUSAI\anaconda3\Lib\site-packages\matplotlib\axes\_axes.pyC:\Users\NUSAI\ANACON~1\Lib\site-packages\matplotlib\axes\_axes.py]8;;[39m"", line 4593, in scatter
    raise ValueError(
ValueError: s must be a scalar, or float array-like with the same size as x and y
"
"0","# Optionally, create a more continuous line for predictions (for visual enhancement)"
"0","sorted_order = np.argsort(X_test['scaled_income'].values)"
"0","plt.plot(X_test['scaled_income'].values[sorted_order], y_pred[sorted_order], color='blue', linewidth=2, label='Regression Line')"
"1","[<mpl_toolkits.mplot3d.art3d.Line3D object at 0x000001B18E699CD0>]
"
"0","plt.xlabel('Monthly income')"
"1","Text(0.5, -0.0935973867752636, 'Monthly income')
"
"0","plt.ylabel('Living Area Preference')"
"1","Text(0.07288045886679756, 0.5, 'Living Area Preference')
"
"0","plt.title('Income vs Living Area Preference Linear Regression')"
"1","Text(0.5, 0.92, 'Income vs Living Area Preference Linear Regression')
"
"0","plt.legend()"
"1","<matplotlib.legend.Legend object at 0x000001B18F8FA3D0>
"
"0","plt.show()"
"0",""
"0",""
"0",""
"0",""
