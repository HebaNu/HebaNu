"0",""
"0","from sklearn.cluster import DBSCAN"
"0","from sklearn.preprocessing import StandardScaler"
"0","from sklearn.neighbors import NearestNeighbors"
"0","import pandas as pd"
"0","import matplotlib.pyplot as plt"
"0","import numpy as np"
"0",""
"0","# Load the data - make sure this path is correct"
"0","df = pd.read_csv('Homeplaces in Roanoke and Salem Cities.csv')"
"0",""
"0","# Select only the geographic coordinates"
"0","df_geo = df[['X', 'Y']]"
"0",""
"0","# Standardizing the features (important for K-Means)"
"0","scaler = StandardScaler()"
"0","df_geo_scaled = scaler.fit_transform(df_geo)"
"0",""
"0","# Finding the optimal eps value using the NearestNeighbors to plot the k-distance graph"
"0","nbrs = NearestNeighbors(n_neighbors=4).fit(df_geo_scaled)"
"0","distances, indices = nbrs.kneighbors(df_geo_scaled)"
"0",""
"0","distances = np.sort(distances, axis=0)"
"0","distances = distances[:, 3-1]"
"0",""
"0","plt.figure(figsize=(12, 6))"
"1","<Figure size 1200x600 with 0 Axes>
"
"1","[<matplotlib.lines.Line2D object at 0x0000026904DBE950>]
"
"0","plt.title('k-distance Graph')"
"1","Text(0.5, 1.0, 'k-distance Graph')
"
"1","Text(0.5, 0, 'Point index')
"
"0","plt.ylabel('Distance to 3rd nearest neighbor')"
"1","Text(0, 0.5, 'Distance to 3rd nearest neighbor')
"
"0","plt.show()"
"0",""
"0","# After examining the k-distance graph, you need to choose an eps value where the curve starts to increase significantly"
"0","eps_value = 0.1  # This is a placeholder, adjust based on your k-distance graph"
"0",""
"0","# Perform DBSCAN clustering with the chosen eps and min_samples"
"0","dbscan = DBSCAN(eps=eps_value, min_samples=10)  # Adjust these parameters based on your observations"
"0","clusters = dbscan.fit_predict(df_geo_scaled)"
"0",""
"0","# Adding cluster labels to the dataframe"
"0","df['Cluster'] = clusters"
"0",""
"0","# Plotting the clusters"
"0","plt.figure(figsize=(10, 6))"
"1","<Figure size 1000x600 with 0 Axes>
"
"0","scatter = plt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis', marker='o')"
"0","plt.title('DBSCAN Clustering of Homeplaces in Roanoke and Salem Cities')"
"1","Text(0.5, 1.0, 'DBSCAN Clustering of Homeplaces in Roanoke and Salem Cities')
"
"1","Text(0.5, 0, 'Longitude')
"
"0","plt.ylabel('Latitude')"
"1","Text(0, 0.5, 'Latitude')
"
"0","plt.colorbar(scatter, label='Cluster Label')"
"1","<matplotlib.colorbar.Colorbar object at 0x0000026904DD3F90>
"
"0","plt.show()"
