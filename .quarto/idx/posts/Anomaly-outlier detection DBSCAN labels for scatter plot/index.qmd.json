{"title":"Beyond the Cluster: Spotting the Outliers in Roanoke and Salem","markdown":{"yaml":{"title":"Beyond the Cluster: Spotting the Outliers in Roanoke and Salem","subtitle":"Uncovering Hidden Residential Gems with DBSCAN Anomaly Detection","author":"Heba Nusair","date":"2023-11-06","categories":["news","code","analysis"],"image":"Bryan Vargas.jpg"},"headingText":"**Introduction:**","containsRefs":false,"markdown":"\n\n\nDiscovering anomalies can reveal much about a city's living patterns that conventional clustering might miss. In Roanoke and Salem cities, we dive into the uncommon, the outliers, the unique homeplaces that form the fabric of urban and suburban life. Using DBSCAN, an unsupervised machine learning algorithm, we identify these anomalies, offering insights into how and where people choose to live outside the expected clusters.\n\n#### **The Power of Anomaly Detection:**\n\nAnomaly detection stands at the frontier of data analysis, challenging the status quo by highlighting data points that don't fit in. In the context of urban landscapes, these anomalies could signify emerging neighborhoods, atypical living arrangements, or socio-economic factors influencing residential choices.\n\n#### **DBSCAN: A Primer:**\n\nDensity-Based Spatial Clustering of Applications with Noise (DBSCAN) is a robust algorithm that groups closely packed points together while labeling points that lie alone in low-density regions as outliers. Unlike K-Means, DBSCAN doesn't require pre-specifying the number of clusters, making it ideal for real-world data that's messy and unpredictable.\n\n#### **Methodology:**\n\nWe began with standardizing our geographical data to give each homeplace an equal footing. Next, we employed the DBSCAN algorithm, fine-tuning its parameters through a k-distance graph to ensure optimal clustering. This method distinguishes between the core points, the border points, and the noise, providing us with a granular view of residential distributions.\n\n```{python}\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import NearestNeighbors\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Load the data\ndf = pd.read_csv('WorkersHomeplacesNewUpdate.csv')\n\n# Select only the geographic coordinates\ndf_geo = df[['X', 'Y']]\n\n# Standardizing the features\nscaler = StandardScaler()\ndf_geo_scaled = scaler.fit_transform(df_geo)\n\n# Plot the k-distance graph\nnbrs = NearestNeighbors(n_neighbors=4).fit(df_geo_scaled)\ndistances, indices = nbrs.kneighbors(df_geo_scaled)\n\n\n# After identifying a new eps value from the graph, adjust eps and min_samples\neps_value = 0.05  # This is an example, adjust based on the k-distance graph\nmin_samples_value = 20  # This is an example, adjust based on the dataset\n\n# Perform DBSCAN clustering with the new parameters\ndbscan = DBSCAN(eps=eps_value, min_samples=min_samples_value)\nclusters = dbscan.fit_predict(df_geo_scaled)\n\n# Add cluster labels to the dataframe\ndf['Cluster'] = clusters\n\n# Plot the clusters with the new parameters\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis', marker='o')\nplt.title('Adjusted DBSCAN Clustering of Homeplaces')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.colorbar(scatter, label='Cluster Label')\nplt.show()\n\n```\n\n#### \n\n#### Insights and Patterns:\n\nThe DBSCAN algorithm has uncovered distinct residential patterns in Roanoke and Salem, revealing expected clusters of habitation and, more notably, outliers. These isolated data points potentially represent rural residences or unique urban spaces that challenge typical clustering.\n\n#### Visualization:\n\nThe map below demonstrates our findings with a scatter plot that overlaps the DBSCAN output map and the 55,000 points representing workers' homeplaces scattered across the Roanoke and Salem cities. It color-codes the conventional neighborhoods and marks the outliers, effectively narrating the diversity in residential preferences. DBSCAN excels at detecting these patterns based on data density alone, without the need for predefined groupings. Its ability to identify clusters of any shape and its robustness in labeling outliers as noise enables us to highlight not just common residential areas but also those unique arrangements that may signal new developments or illustrate non-conforming choices. This analysis provides valuable insights into the array of living patterns present in the region.\n\n![A scatter plot overlaps the DBSCAN output map and the 55,000 points representing workers' homeplaces scattered across the Roanoke and Salem cities.](OverlappingAnalysis.jpg)\n\n#### **Conclusion:**\n\nThrough this DBSCAN anomaly detection exercise, we've uncovered the hidden layers of Roanoke and Salem's residential tapestry. The multifaceted nature of residency in Roanoke and Salem, highlighting the unique alongside the expected. These insights are invaluable for urban development, offering a fresh perspective that can help shape more responsive communities. In recognizing every outlier, we pave the way for a richer, more inclusive urban tapestry.\n\n#### **Next Steps:**\n\nAs we continue to explore the data, comparing the results of K-Means and DBSCAN will be our next endeavor. Stay tuned for a comprehensive analysis where we juxtapose the general trends with the unique anomalies to paint a complete picture of urban settlement patterns.\n","srcMarkdownNoYaml":"\n\n#### **Introduction:**\n\nDiscovering anomalies can reveal much about a city's living patterns that conventional clustering might miss. In Roanoke and Salem cities, we dive into the uncommon, the outliers, the unique homeplaces that form the fabric of urban and suburban life. Using DBSCAN, an unsupervised machine learning algorithm, we identify these anomalies, offering insights into how and where people choose to live outside the expected clusters.\n\n#### **The Power of Anomaly Detection:**\n\nAnomaly detection stands at the frontier of data analysis, challenging the status quo by highlighting data points that don't fit in. In the context of urban landscapes, these anomalies could signify emerging neighborhoods, atypical living arrangements, or socio-economic factors influencing residential choices.\n\n#### **DBSCAN: A Primer:**\n\nDensity-Based Spatial Clustering of Applications with Noise (DBSCAN) is a robust algorithm that groups closely packed points together while labeling points that lie alone in low-density regions as outliers. Unlike K-Means, DBSCAN doesn't require pre-specifying the number of clusters, making it ideal for real-world data that's messy and unpredictable.\n\n#### **Methodology:**\n\nWe began with standardizing our geographical data to give each homeplace an equal footing. Next, we employed the DBSCAN algorithm, fine-tuning its parameters through a k-distance graph to ensure optimal clustering. This method distinguishes between the core points, the border points, and the noise, providing us with a granular view of residential distributions.\n\n```{python}\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import NearestNeighbors\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Load the data\ndf = pd.read_csv('WorkersHomeplacesNewUpdate.csv')\n\n# Select only the geographic coordinates\ndf_geo = df[['X', 'Y']]\n\n# Standardizing the features\nscaler = StandardScaler()\ndf_geo_scaled = scaler.fit_transform(df_geo)\n\n# Plot the k-distance graph\nnbrs = NearestNeighbors(n_neighbors=4).fit(df_geo_scaled)\ndistances, indices = nbrs.kneighbors(df_geo_scaled)\n\n\n# After identifying a new eps value from the graph, adjust eps and min_samples\neps_value = 0.05  # This is an example, adjust based on the k-distance graph\nmin_samples_value = 20  # This is an example, adjust based on the dataset\n\n# Perform DBSCAN clustering with the new parameters\ndbscan = DBSCAN(eps=eps_value, min_samples=min_samples_value)\nclusters = dbscan.fit_predict(df_geo_scaled)\n\n# Add cluster labels to the dataframe\ndf['Cluster'] = clusters\n\n# Plot the clusters with the new parameters\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis', marker='o')\nplt.title('Adjusted DBSCAN Clustering of Homeplaces')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.colorbar(scatter, label='Cluster Label')\nplt.show()\n\n```\n\n#### \n\n#### Insights and Patterns:\n\nThe DBSCAN algorithm has uncovered distinct residential patterns in Roanoke and Salem, revealing expected clusters of habitation and, more notably, outliers. These isolated data points potentially represent rural residences or unique urban spaces that challenge typical clustering.\n\n#### Visualization:\n\nThe map below demonstrates our findings with a scatter plot that overlaps the DBSCAN output map and the 55,000 points representing workers' homeplaces scattered across the Roanoke and Salem cities. It color-codes the conventional neighborhoods and marks the outliers, effectively narrating the diversity in residential preferences. DBSCAN excels at detecting these patterns based on data density alone, without the need for predefined groupings. Its ability to identify clusters of any shape and its robustness in labeling outliers as noise enables us to highlight not just common residential areas but also those unique arrangements that may signal new developments or illustrate non-conforming choices. This analysis provides valuable insights into the array of living patterns present in the region.\n\n![A scatter plot overlaps the DBSCAN output map and the 55,000 points representing workers' homeplaces scattered across the Roanoke and Salem cities.](OverlappingAnalysis.jpg)\n\n#### **Conclusion:**\n\nThrough this DBSCAN anomaly detection exercise, we've uncovered the hidden layers of Roanoke and Salem's residential tapestry. The multifaceted nature of residency in Roanoke and Salem, highlighting the unique alongside the expected. These insights are invaluable for urban development, offering a fresh perspective that can help shape more responsive communities. In recognizing every outlier, we pave the way for a richer, more inclusive urban tapestry.\n\n#### **Next Steps:**\n\nAs we continue to explore the data, comparing the results of K-Means and DBSCAN will be our next endeavor. Stay tuned for a comprehensive analysis where we juxtapose the general trends with the unique anomalies to paint a complete picture of urban settlement patterns.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"toc-depth":2,"html-math-method":"katex","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"darkly","toc-expand":2,"max-width":"500px","code-summary":"Show the code","e-summary":"Show the code","title-block-banner":true,"title":"Beyond the Cluster: Spotting the Outliers in Roanoke and Salem","subtitle":"Uncovering Hidden Residential Gems with DBSCAN Anomaly Detection","author":"Heba Nusair","date":"2023-11-06","categories":["news","code","analysis"],"image":"Bryan Vargas.jpg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}