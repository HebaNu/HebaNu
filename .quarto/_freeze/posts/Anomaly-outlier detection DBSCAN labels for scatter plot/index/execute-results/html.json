{
  "hash": "84512b36705c388535b7e89ef4143a86",
  "result": {
    "markdown": "---\ntitle: \"Anomaly-outlier detection DBSCAN labels for scatter plot\"\nauthor: \"Heba Nusair\"\ndate: \"2023-11-06\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import NearestNeighbors\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Load the data - make sure this path is correct\ndf = pd.read_csv('Homeplaces in Roanoke and Salem Cities.csv')\n\n# Select only the geographic coordinates\ndf_geo = df[['X', 'Y']]\n\n# Standardizing the features (important for K-Means)\nscaler = StandardScaler()\ndf_geo_scaled = scaler.fit_transform(df_geo)\n\n# Assuming you have already standardized your data and have df_geo_scaled ready\n\n# Plot the k-distance graph again with a zoomed-in scale if necessary\nnbrs = NearestNeighbors(n_neighbors=4).fit(df_geo_scaled)\ndistances, indices = nbrs.kneighbors(df_geo_scaled)\n\n# Sort the distances and plot them\ndistances = np.sort(distances, axis=0)\ndistances = distances[:, 3-1]\nplt.figure(figsize=(12, 6))\nplt.plot(distances)\nplt.title('k-distance Graph')\nplt.xlabel('Point index')\nplt.ylabel('Distance to 3rd nearest neighbor')\nplt.show()\n\n# Adjust these values based on your domain knowledge and previous results\neps_value = 0.05  # Decrease if you want more, smaller clusters\nmin_samples_value = 15  # Increase if you want fewer, denser clusters\n\n# Perform DBSCAN clustering with the adjusted parameters\ndbscan = DBSCAN(eps=eps_value, min_samples=min_samples_value)\nclusters = dbscan.fit_predict(df_geo_scaled)\n\n# Add cluster labels to the dataframe\ndf['Cluster'] = clusters\n\n# Plot the clusters with the adjusted parameters\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(df['X'], df['Y'], c=df['Cluster'], cmap='viridis', marker='o')\nplt.title('DBSCAN Clustering of Homeplaces in Roanoke and Salem Cities with Adjusted Parameters')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\ncolorbar = plt.colorbar(scatter, label='Cluster Label')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=969 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=806 height=537}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}